{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'https://your-backend-api.com';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器添加 token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// API 接口\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: (username, email, password) => api.post('/auth/register', {\n    username,\n    email,\n    password\n  }),\n  getCurrentUser: () => api.get('/auth/me')\n};\nexport const mindMapAPI = {\n  // 思维导图相关接口\n  getAllMaps: () => api.get('/mindmaps'),\n  getMapById: id => api.get(`/mindmaps/${id}`),\n  createMap: data => api.post('/mindmaps', data),\n  updateMap: (id, data) => api.put(`/mindmaps/${id}`, data),\n  deleteMap: id => api.delete(`/mindmaps/${id}`),\n  // 分享相关接口\n  shareMap: (id, isPublic) => api.post(`/mindmaps/${id}/share`, {\n    isPublic\n  }),\n  getSharedMaps: () => api.get('/mindmaps/shared'),\n  likeMap: id => api.post(`/mindmaps/${id}/like`),\n  addComment: (id, content) => api.post(`/mindmaps/${id}/comments`, {\n    content\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authAPI","login","email","password","post","register","username","getCurrentUser","get","mindMapAPI","getAllMaps","getMapById","id","createMap","data","updateMap","put","deleteMap","delete","shareMap","isPublic","getSharedMaps","likeMap","addComment","content"],"sources":["D:/Work/SIWEI/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'https://your-backend-api.com';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// 请求拦截器添加 token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API 接口\r\nexport const authAPI = {\r\n  login: (email: string, password: string) =>\r\n    api.post('/auth/login', { email, password }),\r\n\r\n  register: (username: string, email: string, password: string) =>\r\n    api.post('/auth/register', { username, email, password }),\r\n\r\n  getCurrentUser: () =>\r\n    api.get('/auth/me')\r\n};\r\n\r\nexport const mindMapAPI = {\r\n  // 思维导图相关接口\r\n  getAllMaps: () =>\r\n    api.get('/mindmaps'),\r\n\r\n  getMapById: (id: string) =>\r\n    api.get(`/mindmaps/${id}`),\r\n\r\n  createMap: (data: any) =>\r\n    api.post('/mindmaps', data),\r\n\r\n  updateMap: (id: string, data: any) =>\r\n    api.put(`/mindmaps/${id}`, data),\r\n\r\n  deleteMap: (id: string) =>\r\n    api.delete(`/mindmaps/${id}`),\r\n\r\n  // 分享相关接口\r\n  shareMap: (id: string, isPublic: boolean) =>\r\n    api.post(`/mindmaps/${id}/share`, { isPublic }),\r\n\r\n  getSharedMaps: () =>\r\n    api.get('/mindmaps/shared'),\r\n\r\n  likeMap: (id: string) =>\r\n    api.post(`/mindmaps/${id}/like`),\r\n\r\n  addComment: (id: string, content: string) =>\r\n    api.post(`/mindmaps/${id}/comments`, { content })\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;AAE/E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG;EACrBC,KAAK,EAAEA,CAACC,KAAa,EAAEC,QAAgB,KACrClB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EAE9CE,QAAQ,EAAEA,CAACC,QAAgB,EAAEJ,KAAa,EAAEC,QAAgB,KAC1DlB,GAAG,CAACmB,IAAI,CAAC,gBAAgB,EAAE;IAAEE,QAAQ;IAAEJ,KAAK;IAAEC;EAAS,CAAC,CAAC;EAE3DI,cAAc,EAAEA,CAAA,KACdtB,GAAG,CAACuB,GAAG,CAAC,UAAU;AACtB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,UAAU,EAAEA,CAAA,KACVzB,GAAG,CAACuB,GAAG,CAAC,WAAW,CAAC;EAEtBG,UAAU,EAAGC,EAAU,IACrB3B,GAAG,CAACuB,GAAG,CAAC,aAAaI,EAAE,EAAE,CAAC;EAE5BC,SAAS,EAAGC,IAAS,IACnB7B,GAAG,CAACmB,IAAI,CAAC,WAAW,EAAEU,IAAI,CAAC;EAE7BC,SAAS,EAAEA,CAACH,EAAU,EAAEE,IAAS,KAC/B7B,GAAG,CAAC+B,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEE,IAAI,CAAC;EAElCG,SAAS,EAAGL,EAAU,IACpB3B,GAAG,CAACiC,MAAM,CAAC,aAAaN,EAAE,EAAE,CAAC;EAE/B;EACAO,QAAQ,EAAEA,CAACP,EAAU,EAAEQ,QAAiB,KACtCnC,GAAG,CAACmB,IAAI,CAAC,aAAaQ,EAAE,QAAQ,EAAE;IAAEQ;EAAS,CAAC,CAAC;EAEjDC,aAAa,EAAEA,CAAA,KACbpC,GAAG,CAACuB,GAAG,CAAC,kBAAkB,CAAC;EAE7Bc,OAAO,EAAGV,EAAU,IAClB3B,GAAG,CAACmB,IAAI,CAAC,aAAaQ,EAAE,OAAO,CAAC;EAElCW,UAAU,EAAEA,CAACX,EAAU,EAAEY,OAAe,KACtCvC,GAAG,CAACmB,IAAI,CAAC,aAAaQ,EAAE,WAAW,EAAE;IAAEY;EAAQ,CAAC;AACpD,CAAC;AAED,eAAevC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}