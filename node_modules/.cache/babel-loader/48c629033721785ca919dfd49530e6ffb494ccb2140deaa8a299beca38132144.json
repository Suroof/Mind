{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { findTopicById, isDescendant, updateTopicTreeStatus, setTopicTreeComplete } from '../utils/topicUtils';\n// 创建初始状态\nconst initialState = {\n  currentMap: {\n    id: '1',\n    rootTopic: {\n      id: '1',\n      title: '项目计划',\n      isCompleted: false,\n      children: []\n    },\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    settings: {\n      completedColor: '#4CAF50',\n      incompletedColor: '#FF5252',\n      showNotifications: true,\n      autoLayout: true\n    }\n  },\n  selectedTopic: null\n};\nconst mindMapSlice = createSlice({\n  name: 'mindMap',\n  initialState,\n  reducers: {\n    toggleTopicComplete(state, action) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        setTopicTreeComplete(topic, action.payload.isCompleted);\n        updateTopicTreeStatus(state.currentMap.rootTopic);\n      }\n    },\n    updateTopicTitle(state, action) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.title = action.payload.title;\n      }\n    },\n    updateTopicColor(state, action) {\n      var _state$currentMap;\n      const topic = findTopicById((_state$currentMap = state.currentMap) === null || _state$currentMap === void 0 ? void 0 : _state$currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.color = action.payload.color;\n      }\n    },\n    addTopic(state, action) {\n      if (!state.currentMap) return;\n      const newTopic = {\n        id: Date.now().toString(),\n        title: action.payload.title,\n        isCompleted: false,\n        children: []\n      };\n      if (action.payload.parentId) {\n        const parentTopic = findTopicById(state.currentMap.rootTopic, action.payload.parentId);\n        if (parentTopic) {\n          parentTopic.children.push(newTopic);\n        }\n      } else {\n        state.currentMap.rootTopic.children.push(newTopic);\n      }\n    },\n    connectTopics(state, action) {\n      if (!state.currentMap) return;\n      const sourceTopic = findTopicById(state.currentMap.rootTopic, action.payload.sourceId);\n      const targetTopic = findTopicById(state.currentMap.rootTopic, action.payload.targetId);\n      if (sourceTopic && targetTopic) {\n        // 防止循环引用\n        if (isDescendant(targetTopic, sourceTopic)) return;\n\n        // 从原位置移除\n        removeTopicFromParent(state.currentMap.rootTopic, sourceTopic.id);\n\n        // 添加到新位置\n        targetTopic.children.push(sourceTopic);\n      }\n    }\n  }\n});\n\n// 辅助函数：从父节点中移除主题\nconst removeTopicFromParent = (root, topicId) => {\n  const index = root.children.findIndex(child => child.id === topicId);\n  if (index !== -1) {\n    root.children.splice(index, 1);\n    return true;\n  }\n  for (const child of root.children) {\n    if (removeTopicFromParent(child, topicId)) {\n      return true;\n    }\n  }\n  return false;\n};\nexport const {\n  toggleTopicComplete,\n  updateTopicTitle,\n  updateTopicColor,\n  addTopic,\n  connectTopics\n} = mindMapSlice.actions;\nexport default mindMapSlice;","map":{"version":3,"names":["createSlice","findTopicById","isDescendant","updateTopicTreeStatus","setTopicTreeComplete","initialState","currentMap","id","rootTopic","title","isCompleted","children","createdAt","Date","updatedAt","settings","completedColor","incompletedColor","showNotifications","autoLayout","selectedTopic","mindMapSlice","name","reducers","toggleTopicComplete","state","action","topic","payload","updateTopicTitle","updateTopicColor","_state$currentMap","color","addTopic","newTopic","now","toString","parentId","parentTopic","push","connectTopics","sourceTopic","sourceId","targetTopic","targetId","removeTopicFromParent","root","topicId","index","findIndex","child","splice","actions"],"sources":["D:/Work/SIWEI/src/store/mindMapSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { MindMap, Topic } from '../types/MindMap';\r\nimport { findTopicById, isDescendant, updateTopicTreeStatus, setTopicTreeComplete } from '../utils/topicUtils';\r\n\r\ninterface MindMapState {\r\n  currentMap: MindMap | null;\r\n  selectedTopic: string | null;\r\n}\r\n\r\n// 创建初始状态\r\nconst initialState: MindMapState = {\r\n  currentMap: {\r\n    id: '1',\r\n    rootTopic: {\r\n      id: '1',\r\n      title: '项目计划',\r\n      isCompleted: false,\r\n      children: []\r\n    },\r\n    createdAt: new Date(),\r\n    updatedAt: new Date(),\r\n    settings: {\r\n      completedColor: '#4CAF50',\r\n      incompletedColor: '#FF5252',\r\n      showNotifications: true,\r\n      autoLayout: true\r\n    }\r\n  },\r\n  selectedTopic: null,\r\n};\r\n\r\nconst mindMapSlice = createSlice({\r\n  name: 'mindMap',\r\n  initialState,\r\n  reducers: {\r\n    toggleTopicComplete(state, action: PayloadAction<{id: string; isCompleted: boolean}>) {\r\n      if (!state.currentMap) return;\r\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\r\n      if (topic) {\r\n        setTopicTreeComplete(topic, action.payload.isCompleted);\r\n        updateTopicTreeStatus(state.currentMap.rootTopic);\r\n      }\r\n    },\r\n\r\n    updateTopicTitle(state, action: PayloadAction<{id: string; title: string}>) {\r\n      if (!state.currentMap) return;\r\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\r\n      if (topic) {\r\n        topic.title = action.payload.title;\r\n      }\r\n    },\r\n\r\n    updateTopicColor(state, action: PayloadAction<{id: string; color: string}>) {\r\n      const topic = findTopicById(state.currentMap?.rootTopic, action.payload.id);\r\n      if (topic) {\r\n        topic.color = action.payload.color;\r\n      }\r\n    },\r\n\r\n    addTopic(state, action: PayloadAction<{title: string; parentId: string | null}>) {\r\n      if (!state.currentMap) return;\r\n\r\n      const newTopic: Topic = {\r\n        id: Date.now().toString(),\r\n        title: action.payload.title,\r\n        isCompleted: false,\r\n        children: []\r\n      };\r\n\r\n      if (action.payload.parentId) {\r\n        const parentTopic = findTopicById(state.currentMap.rootTopic, action.payload.parentId);\r\n        if (parentTopic) {\r\n          parentTopic.children.push(newTopic);\r\n        }\r\n      } else {\r\n        state.currentMap.rootTopic.children.push(newTopic);\r\n      }\r\n    },\r\n\r\n    connectTopics(state, action: PayloadAction<{sourceId: string; targetId: string}>) {\r\n      if (!state.currentMap) return;\r\n\r\n      const sourceTopic = findTopicById(state.currentMap.rootTopic, action.payload.sourceId);\r\n      const targetTopic = findTopicById(state.currentMap.rootTopic, action.payload.targetId);\r\n\r\n      if (sourceTopic && targetTopic) {\r\n        // 防止循环引用\r\n        if (isDescendant(targetTopic, sourceTopic)) return;\r\n\r\n        // 从原位置移除\r\n        removeTopicFromParent(state.currentMap.rootTopic, sourceTopic.id);\r\n\r\n        // 添加到新位置\r\n        targetTopic.children.push(sourceTopic);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n// 辅助函数：从父节点中移除主题\r\nconst removeTopicFromParent = (root: Topic, topicId: string): boolean => {\r\n  const index = root.children.findIndex(child => child.id === topicId);\r\n  if (index !== -1) {\r\n    root.children.splice(index, 1);\r\n    return true;\r\n  }\r\n\r\n  for (const child of root.children) {\r\n    if (removeTopicFromParent(child, topicId)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport const {\r\n  toggleTopicComplete,\r\n  updateTopicTitle,\r\n  updateTopicColor,\r\n  addTopic,\r\n  connectTopics\r\n} = mindMapSlice.actions;\r\nexport default mindMapSlice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}