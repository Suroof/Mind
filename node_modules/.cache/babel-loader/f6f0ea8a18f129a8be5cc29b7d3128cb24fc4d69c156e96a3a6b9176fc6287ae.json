{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { findTopicById, updateParentProgress } from '../utils/topicUtils';\nconst initialState = {\n  currentMap: null,\n  selectedTopic: null\n};\nconst mindMapSlice = createSlice({\n  name: 'mindMap',\n  initialState,\n  reducers: {\n    toggleTopicComplete(state, action) {\n      var _state$currentMap;\n      const topic = findTopicById((_state$currentMap = state.currentMap) === null || _state$currentMap === void 0 ? void 0 : _state$currentMap.rootTopic, action.payload);\n      if (topic) {\n        topic.isCompleted = !topic.isCompleted;\n        updateParentProgress(topic);\n      }\n    },\n    updateTopicColor(state, action) {\n      var _state$currentMap2;\n      const topic = findTopicById((_state$currentMap2 = state.currentMap) === null || _state$currentMap2 === void 0 ? void 0 : _state$currentMap2.rootTopic, action.payload.id);\n      if (topic) {\n        topic.color = action.payload.color;\n      }\n    }\n  }\n});\nexport const {\n  toggleTopicComplete,\n  updateTopicColor\n} = mindMapSlice.actions;\nexport default mindMapSlice;","map":{"version":3,"names":["createSlice","findTopicById","updateParentProgress","initialState","currentMap","selectedTopic","mindMapSlice","name","reducers","toggleTopicComplete","state","action","_state$currentMap","topic","rootTopic","payload","isCompleted","updateTopicColor","_state$currentMap2","id","color","actions"],"sources":["D:/Work/SIWEI/src/store/mindMapSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { MindMap, Topic } from '../types/MindMap';\r\nimport { findTopicById, updateParentProgress } from '../utils/topicUtils';\r\n\r\ninterface MindMapState {\r\n  currentMap: MindMap | null;\r\n  selectedTopic: string | null;\r\n}\r\n\r\nconst initialState: MindMapState = {\r\n  currentMap: null,\r\n  selectedTopic: null,\r\n};\r\n\r\nconst mindMapSlice = createSlice({\r\n  name: 'mindMap',\r\n  initialState,\r\n  reducers: {\r\n    toggleTopicComplete(state, action: PayloadAction<string>) {\r\n      const topic = findTopicById(state.currentMap?.rootTopic, action.payload);\r\n      if (topic) {\r\n        topic.isCompleted = !topic.isCompleted;\r\n        updateParentProgress(topic);\r\n      }\r\n    },\r\n\r\n    updateTopicColor(state, action: PayloadAction<{id: string; color: string}>) {\r\n      const topic = findTopicById(state.currentMap?.rootTopic, action.payload.id);\r\n      if (topic) {\r\n        topic.color = action.payload.color;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { toggleTopicComplete, updateTopicColor } = mindMapSlice.actions;\r\nexport default mindMapSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,SAASC,aAAa,EAAEC,oBAAoB,QAAQ,qBAAqB;AAOzE,MAAMC,YAA0B,GAAG;EACjCC,UAAU,EAAE,IAAI;EAChBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,mBAAmBA,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAAA,IAAAC,iBAAA;MACxD,MAAMC,KAAK,GAAGZ,aAAa,EAAAW,iBAAA,GAACF,KAAK,CAACN,UAAU,cAAAQ,iBAAA,uBAAhBA,iBAAA,CAAkBE,SAAS,EAAEH,MAAM,CAACI,OAAO,CAAC;MACxE,IAAIF,KAAK,EAAE;QACTA,KAAK,CAACG,WAAW,GAAG,CAACH,KAAK,CAACG,WAAW;QACtCd,oBAAoB,CAACW,KAAK,CAAC;MAC7B;IACF,CAAC;IAEDI,gBAAgBA,CAACP,KAAK,EAAEC,MAAkD,EAAE;MAAA,IAAAO,kBAAA;MAC1E,MAAML,KAAK,GAAGZ,aAAa,EAAAiB,kBAAA,GAACR,KAAK,CAACN,UAAU,cAAAc,kBAAA,uBAAhBA,kBAAA,CAAkBJ,SAAS,EAAEH,MAAM,CAACI,OAAO,CAACI,EAAE,CAAC;MAC3E,IAAIN,KAAK,EAAE;QACTA,KAAK,CAACO,KAAK,GAAGT,MAAM,CAACI,OAAO,CAACK,KAAK;MACpC;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,mBAAmB;EAAEQ;AAAiB,CAAC,GAAGX,YAAY,CAACe,OAAO;AAC7E,eAAef,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}