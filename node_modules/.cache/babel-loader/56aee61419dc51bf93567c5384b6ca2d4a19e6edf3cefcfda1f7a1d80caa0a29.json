{"ast":null,"code":"// 模拟在线存储，实际项目中应该连接到后端服务器\nconst STORAGE_KEY = 'cloud-mindmaps';\nexport const publishMindMap = (mindMap, authorId, authorName, isPublic = true) => {\n  const cloudMindMap = {\n    ...mindMap,\n    authorId,\n    authorName,\n    publishedAt: new Date().toISOString(),\n    likes: 0,\n    comments: [],\n    isPublic\n  };\n  const existingMaps = getAllCloudMindMaps();\n  existingMaps.push(cloudMindMap);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(existingMaps));\n  return cloudMindMap;\n};\nexport const getAllCloudMindMaps = () => {\n  return JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n};\nexport const getUserMindMaps = userId => {\n  const allMaps = getAllCloudMindMaps();\n  return allMaps.filter(map => map.authorId === userId);\n};\nexport const likeMindMap = (mapId, userId) => {\n  const maps = getAllCloudMindMaps();\n  const mapIndex = maps.findIndex(map => map.id === mapId);\n  if (mapIndex >= 0) {\n    maps[mapIndex].likes += 1;\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(maps));\n    return true;\n  }\n  return false;\n};\nexport const addComment = (mapId, authorId, authorName, content) => {\n  const maps = getAllCloudMindMaps();\n  const mapIndex = maps.findIndex(map => map.id === mapId);\n  if (mapIndex >= 0) {\n    const comment = {\n      id: Date.now().toString(),\n      authorId,\n      authorName,\n      content,\n      createdAt: new Date().toISOString()\n    };\n    maps[mapIndex].comments.push(comment);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(maps));\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["STORAGE_KEY","publishMindMap","mindMap","authorId","authorName","isPublic","cloudMindMap","publishedAt","Date","toISOString","likes","comments","existingMaps","getAllCloudMindMaps","push","localStorage","setItem","JSON","stringify","parse","getItem","getUserMindMaps","userId","allMaps","filter","map","likeMindMap","mapId","maps","mapIndex","findIndex","id","addComment","content","comment","now","toString","createdAt"],"sources":["D:/Work/SIWEI/src/utils/cloudStorage.ts"],"sourcesContent":["import { MindMap } from '../types/MindMap';\r\n\r\ninterface CloudMindMap extends MindMap {\r\n  authorId: string;\r\n  authorName: string;\r\n  publishedAt: string;\r\n  likes: number;\r\n  comments: Comment[];\r\n  isPublic: boolean;\r\n}\r\n\r\ninterface Comment {\r\n  id: string;\r\n  authorId: string;\r\n  authorName: string;\r\n  content: string;\r\n  createdAt: string;\r\n}\r\n\r\n// 模拟在线存储，实际项目中应该连接到后端服务器\r\nconst STORAGE_KEY = 'cloud-mindmaps';\r\n\r\nexport const publishMindMap = (\r\n  mindMap: MindMap,\r\n  authorId: string,\r\n  authorName: string,\r\n  isPublic: boolean = true\r\n): CloudMindMap => {\r\n  const cloudMindMap: CloudMindMap = {\r\n    ...mindMap,\r\n    authorId,\r\n    authorName,\r\n    publishedAt: new Date().toISOString(),\r\n    likes: 0,\r\n    comments: [],\r\n    isPublic\r\n  };\r\n\r\n  const existingMaps = getAllCloudMindMaps();\r\n  existingMaps.push(cloudMindMap);\r\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(existingMaps));\r\n\r\n  return cloudMindMap;\r\n};\r\n\r\nexport const getAllCloudMindMaps = (): CloudMindMap[] => {\r\n  return JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\r\n};\r\n\r\nexport const getUserMindMaps = (userId: string): CloudMindMap[] => {\r\n  const allMaps = getAllCloudMindMaps();\r\n  return allMaps.filter(map => map.authorId === userId);\r\n};\r\n\r\nexport const likeMindMap = (mapId: string, userId: string): boolean => {\r\n  const maps = getAllCloudMindMaps();\r\n  const mapIndex = maps.findIndex(map => map.id === mapId);\r\n  if (mapIndex >= 0) {\r\n    maps[mapIndex].likes += 1;\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(maps));\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const addComment = (\r\n  mapId: string,\r\n  authorId: string,\r\n  authorName: string,\r\n  content: string\r\n): boolean => {\r\n  const maps = getAllCloudMindMaps();\r\n  const mapIndex = maps.findIndex(map => map.id === mapId);\r\n  if (mapIndex >= 0) {\r\n    const comment: Comment = {\r\n      id: Date.now().toString(),\r\n      authorId,\r\n      authorName,\r\n      content,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    maps[mapIndex].comments.push(comment);\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(maps));\r\n    return true;\r\n  }\r\n  return false;\r\n};"],"mappings":"AAmBA;AACA,MAAMA,WAAW,GAAG,gBAAgB;AAEpC,OAAO,MAAMC,cAAc,GAAGA,CAC5BC,OAAgB,EAChBC,QAAgB,EAChBC,UAAkB,EAClBC,QAAiB,GAAG,IAAI,KACP;EACjB,MAAMC,YAA0B,GAAG;IACjC,GAAGJ,OAAO;IACVC,QAAQ;IACRC,UAAU;IACVG,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACrCC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,EAAE;IACZN;EACF,CAAC;EAED,MAAMO,YAAY,GAAGC,mBAAmB,CAAC,CAAC;EAC1CD,YAAY,CAACE,IAAI,CAACR,YAAY,CAAC;EAC/BS,YAAY,CAACC,OAAO,CAAChB,WAAW,EAAEiB,IAAI,CAACC,SAAS,CAACN,YAAY,CAAC,CAAC;EAE/D,OAAON,YAAY;AACrB,CAAC;AAED,OAAO,MAAMO,mBAAmB,GAAGA,CAAA,KAAsB;EACvD,OAAOI,IAAI,CAACE,KAAK,CAACJ,YAAY,CAACK,OAAO,CAACpB,WAAW,CAAC,IAAI,IAAI,CAAC;AAC9D,CAAC;AAED,OAAO,MAAMqB,eAAe,GAAIC,MAAc,IAAqB;EACjE,MAAMC,OAAO,GAAGV,mBAAmB,CAAC,CAAC;EACrC,OAAOU,OAAO,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACtB,QAAQ,KAAKmB,MAAM,CAAC;AACvD,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAACC,KAAa,EAAEL,MAAc,KAAc;EACrE,MAAMM,IAAI,GAAGf,mBAAmB,CAAC,CAAC;EAClC,MAAMgB,QAAQ,GAAGD,IAAI,CAACE,SAAS,CAACL,GAAG,IAAIA,GAAG,CAACM,EAAE,KAAKJ,KAAK,CAAC;EACxD,IAAIE,QAAQ,IAAI,CAAC,EAAE;IACjBD,IAAI,CAACC,QAAQ,CAAC,CAACnB,KAAK,IAAI,CAAC;IACzBK,YAAY,CAACC,OAAO,CAAChB,WAAW,EAAEiB,IAAI,CAACC,SAAS,CAACU,IAAI,CAAC,CAAC;IACvD,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMI,UAAU,GAAGA,CACxBL,KAAa,EACbxB,QAAgB,EAChBC,UAAkB,EAClB6B,OAAe,KACH;EACZ,MAAML,IAAI,GAAGf,mBAAmB,CAAC,CAAC;EAClC,MAAMgB,QAAQ,GAAGD,IAAI,CAACE,SAAS,CAACL,GAAG,IAAIA,GAAG,CAACM,EAAE,KAAKJ,KAAK,CAAC;EACxD,IAAIE,QAAQ,IAAI,CAAC,EAAE;IACjB,MAAMK,OAAgB,GAAG;MACvBH,EAAE,EAAEvB,IAAI,CAAC2B,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzBjC,QAAQ;MACRC,UAAU;MACV6B,OAAO;MACPI,SAAS,EAAE,IAAI7B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC,CAAC;IACDmB,IAAI,CAACC,QAAQ,CAAC,CAAClB,QAAQ,CAACG,IAAI,CAACoB,OAAO,CAAC;IACrCnB,YAAY,CAACC,OAAO,CAAChB,WAAW,EAAEiB,IAAI,CAACC,SAAS,CAACU,IAAI,CAAC,CAAC;IACvD,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}