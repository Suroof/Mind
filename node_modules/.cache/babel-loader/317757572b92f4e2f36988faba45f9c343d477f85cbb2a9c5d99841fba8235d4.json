{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { findTopicById, isDescendant, updateTopicTreeStatus, setTopicTreeComplete } from '../utils/topicUtils';\n// 创建初始状态\nconst initialState = {\n  currentMap: {\n    id: '1',\n    rootTopic: {\n      id: '1',\n      title: '项目计划',\n      type: 'text',\n      isCompleted: false,\n      isExpanded: true,\n      children: []\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    settings: {\n      completedColor: '#4CAF50',\n      incompletedColor: '#FF5252',\n      showNotifications: true,\n      autoLayout: true\n    }\n  },\n  selectedTopic: null,\n  history: [],\n  // 初始化历史记录\n  historyIndex: -1 // 初始化历史索引\n};\nconst mindMapSlice = createSlice({\n  name: 'mindMap',\n  initialState,\n  reducers: {\n    toggleTopicComplete(state, action) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        setTopicTreeComplete(topic, action.payload.isCompleted);\n        updateTopicTreeStatus(state.currentMap.rootTopic);\n      }\n    },\n    updateTopicTitle(state, action) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.title = action.payload.title;\n      }\n    },\n    updateTopicColor(state, action) {\n      var _state$currentMap;\n      const topic = findTopicById((_state$currentMap = state.currentMap) === null || _state$currentMap === void 0 ? void 0 : _state$currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.color = action.payload.color;\n      }\n    },\n    addTopic(state, action) {\n      if (!state.currentMap) return;\n      const newTopic = {\n        id: Date.now().toString(),\n        title: action.payload.title,\n        type: 'text',\n        isCompleted: false,\n        isExpanded: true,\n        children: []\n      };\n      if (action.payload.parentId) {\n        const parentTopic = findTopicById(state.currentMap.rootTopic, action.payload.parentId);\n        if (parentTopic) {\n          parentTopic.children.push(newTopic);\n        }\n      } else {\n        state.currentMap.rootTopic.children.push(newTopic);\n      }\n      if (state.currentMap) {\n        state.history = [...state.history.slice(0, state.historyIndex + 1), JSON.parse(JSON.stringify(state.currentMap))];\n        state.historyIndex++;\n      }\n    },\n    connectTopics(state, action) {\n      if (!state.currentMap) return;\n      const sourceTopic = findTopicById(state.currentMap.rootTopic, action.payload.sourceId);\n      const targetTopic = findTopicById(state.currentMap.rootTopic, action.payload.targetId);\n      if (sourceTopic && targetTopic) {\n        // 防止循环引用\n        if (isDescendant(targetTopic, sourceTopic)) return;\n\n        // 从原位置移除\n        removeTopicFromParent(state.currentMap.rootTopic, sourceTopic.id);\n\n        // 添加到新位置\n        targetTopic.children.push(sourceTopic);\n      }\n    },\n    saveMindMap(state) {\n      if (state.currentMap) {\n        state.currentMap.updatedAt = new Date().toISOString();\n      }\n    },\n    loadMindMap(state, action) {\n      state.currentMap = action.payload;\n    },\n    createNewMindMap(state) {\n      const now = new Date().toISOString();\n      state.currentMap = {\n        id: Date.now().toString(),\n        rootTopic: {\n          id: 'root',\n          title: '新思维导图',\n          type: 'text',\n          isCompleted: false,\n          isExpanded: true,\n          children: []\n        },\n        createdAt: now,\n        updatedAt: now,\n        settings: {\n          completedColor: '#4CAF50',\n          incompletedColor: '#FF5252',\n          showNotifications: true,\n          autoLayout: true\n        }\n      };\n    },\n    toggleTopicExpand(state, action) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload);\n      if (topic) {\n        topic.isExpanded = !topic.isExpanded;\n      }\n    },\n    updateTopicType(state, action) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.type = action.payload.type;\n        topic.content = action.payload.content;\n      }\n    },\n    deleteTopic(state, action) {\n      if (!state.currentMap) return;\n      removeTopicFromParent(state.currentMap.rootTopic, action.payload);\n      if (state.currentMap) {\n        state.history = [...state.history.slice(0, state.historyIndex + 1), JSON.parse(JSON.stringify(state.currentMap))];\n        state.historyIndex++;\n      }\n    },\n    // 添加撤销动作\n    undoAction(state) {\n      if (state.historyIndex > 0) {\n        state.historyIndex--;\n        state.currentMap = JSON.parse(JSON.stringify(state.history[state.historyIndex]));\n      }\n    }\n  }\n});\n\n// 辅助函数：从父节点中移除主题\nconst removeTopicFromParent = (root, topicId) => {\n  const index = root.children.findIndex(child => child.id === topicId);\n  if (index !== -1) {\n    root.children.splice(index, 1);\n    return true;\n  }\n  for (const child of root.children) {\n    if (removeTopicFromParent(child, topicId)) {\n      return true;\n    }\n  }\n  return false;\n};\nexport const {\n  toggleTopicComplete,\n  updateTopicTitle,\n  updateTopicColor,\n  addTopic,\n  connectTopics,\n  saveMindMap,\n  loadMindMap,\n  createNewMindMap,\n  toggleTopicExpand,\n  updateTopicType,\n  deleteTopic,\n  undoAction\n} = mindMapSlice.actions;\nexport default mindMapSlice;","map":{"version":3,"names":["createSlice","findTopicById","isDescendant","updateTopicTreeStatus","setTopicTreeComplete","initialState","currentMap","id","rootTopic","title","type","isCompleted","isExpanded","children","createdAt","Date","toISOString","updatedAt","settings","completedColor","incompletedColor","showNotifications","autoLayout","selectedTopic","history","historyIndex","mindMapSlice","name","reducers","toggleTopicComplete","state","action","topic","payload","updateTopicTitle","updateTopicColor","_state$currentMap","color","addTopic","newTopic","now","toString","parentId","parentTopic","push","slice","JSON","parse","stringify","connectTopics","sourceTopic","sourceId","targetTopic","targetId","removeTopicFromParent","saveMindMap","loadMindMap","createNewMindMap","toggleTopicExpand","updateTopicType","content","deleteTopic","undoAction","root","topicId","index","findIndex","child","splice","actions"],"sources":["D:/Work/SIWEI/src/store/mindMapSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { MindMap, Topic, TopicType } from '../types/MindMap';\nimport { findTopicById, isDescendant, updateTopicTreeStatus, setTopicTreeComplete } from '../utils/topicUtils';\n\ninterface MindMapState {\n  currentMap: MindMap | null;\n  selectedTopic: string | null;\n  history: MindMap[];  // 添加历史记录\n  historyIndex: number;  // 添加历史索引\n}\n\n// 创建初始状态\nconst initialState: MindMapState = {\n  currentMap: {\n    id: '1',\n    rootTopic: {\n      id: '1',\n      title: '项目计划',\n      type: 'text',\n      isCompleted: false,\n      isExpanded: true,\n      children: []\n    },\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    settings: {\n      completedColor: '#4CAF50',\n      incompletedColor: '#FF5252',\n      showNotifications: true,\n      autoLayout: true\n    }\n  },\n  selectedTopic: null,\n  history: [],  // 初始化历史记录\n  historyIndex: -1,  // 初始化历史索引\n};\n\nconst mindMapSlice = createSlice({\n  name: 'mindMap',\n  initialState,\n  reducers: {\n    toggleTopicComplete(state, action: PayloadAction<{id: string; isCompleted: boolean}>) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        setTopicTreeComplete(topic, action.payload.isCompleted);\n        updateTopicTreeStatus(state.currentMap.rootTopic);\n      }\n    },\n\n    updateTopicTitle(state, action: PayloadAction<{id: string; title: string}>) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.title = action.payload.title;\n      }\n    },\n\n    updateTopicColor(state, action: PayloadAction<{id: string; color: string}>) {\n      const topic = findTopicById(state.currentMap?.rootTopic, action.payload.id);\n      if (topic) {\n        topic.color = action.payload.color;\n      }\n    },\n\n    addTopic(state, action: PayloadAction<{title: string; parentId: string | null}>) {\n      if (!state.currentMap) return;\n\n      const newTopic: Topic = {\n        id: Date.now().toString(),\n        title: action.payload.title,\n        type: 'text',\n        isCompleted: false,\n        isExpanded: true,\n        children: []\n      };\n\n      if (action.payload.parentId) {\n        const parentTopic = findTopicById(state.currentMap.rootTopic, action.payload.parentId);\n        if (parentTopic) {\n          parentTopic.children.push(newTopic);\n        }\n      } else {\n        state.currentMap.rootTopic.children.push(newTopic);\n      }\n\n      if (state.currentMap) {\n        state.history = [...state.history.slice(0, state.historyIndex + 1), JSON.parse(JSON.stringify(state.currentMap))];\n        state.historyIndex++;\n      }\n    },\n\n    connectTopics(state, action: PayloadAction<{sourceId: string; targetId: string}>) {\n      if (!state.currentMap) return;\n\n      const sourceTopic = findTopicById(state.currentMap.rootTopic, action.payload.sourceId);\n      const targetTopic = findTopicById(state.currentMap.rootTopic, action.payload.targetId);\n\n      if (sourceTopic && targetTopic) {\n        // 防止循环引用\n        if (isDescendant(targetTopic, sourceTopic)) return;\n\n        // 从原位置移除\n        removeTopicFromParent(state.currentMap.rootTopic, sourceTopic.id);\n\n        // 添加到新位置\n        targetTopic.children.push(sourceTopic);\n      }\n    },\n\n    saveMindMap(state) {\n      if (state.currentMap) {\n        state.currentMap.updatedAt = new Date().toISOString();\n      }\n    },\n\n    loadMindMap(state, action: PayloadAction<MindMap>) {\n      state.currentMap = action.payload;\n    },\n\n    createNewMindMap(state) {\n      const now = new Date().toISOString();\n      state.currentMap = {\n        id: Date.now().toString(),\n        rootTopic: {\n          id: 'root',\n          title: '新思维导图',\n          type: 'text',\n          isCompleted: false,\n          isExpanded: true,\n          children: []\n        },\n        createdAt: now,\n        updatedAt: now,\n        settings: {\n          completedColor: '#4CAF50',\n          incompletedColor: '#FF5252',\n          showNotifications: true,\n          autoLayout: true\n        }\n      };\n    },\n\n    toggleTopicExpand(state, action: PayloadAction<string>) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload);\n      if (topic) {\n        topic.isExpanded = !topic.isExpanded;\n      }\n    },\n\n    updateTopicType(state, action: PayloadAction<{\n      id: string;\n      type: TopicType;\n      content?: string;\n    }>) {\n      if (!state.currentMap) return;\n      const topic = findTopicById(state.currentMap.rootTopic, action.payload.id);\n      if (topic) {\n        topic.type = action.payload.type;\n        topic.content = action.payload.content;\n      }\n    },\n\n    deleteTopic(state, action: PayloadAction<string>) {\n      if (!state.currentMap) return;\n      removeTopicFromParent(state.currentMap.rootTopic, action.payload);\n      if (state.currentMap) {\n        state.history = [...state.history.slice(0, state.historyIndex + 1), JSON.parse(JSON.stringify(state.currentMap))];\n        state.historyIndex++;\n      }\n    },\n\n    // 添加撤销动作\n    undoAction(state) {\n      if (state.historyIndex > 0) {\n        state.historyIndex--;\n        state.currentMap = JSON.parse(JSON.stringify(state.history[state.historyIndex]));\n      }\n    },\n  }\n});\n\n// 辅助函数：从父节点中移除主题\nconst removeTopicFromParent = (root: Topic, topicId: string): boolean => {\n  const index = root.children.findIndex(child => child.id === topicId);\n  if (index !== -1) {\n    root.children.splice(index, 1);\n    return true;\n  }\n\n  for (const child of root.children) {\n    if (removeTopicFromParent(child, topicId)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport const {\n  toggleTopicComplete,\n  updateTopicTitle,\n  updateTopicColor,\n  addTopic,\n  connectTopics,\n  saveMindMap,\n  loadMindMap,\n  createNewMindMap,\n  toggleTopicExpand,\n  updateTopicType,\n  deleteTopic,\n  undoAction\n} = mindMapSlice.actions;\nexport default mindMapSlice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}